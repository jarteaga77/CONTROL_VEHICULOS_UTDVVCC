/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.syscv.utd.presentacion;

import com.syscv.utd.conexionBD.ConexionBD;
import com.syscv.utd.recursos.JPColor;
import com.syscv.utd.reportes.ReporteConEstacion;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Jonathan
 */
public class JIFImprimirCE extends javax.swing.JInternalFrame {

 private DefaultTableModel modelo;
    
 private ReporteConEstacion reporte;
 private ConexionBD conexion=new ConexionBD();
 
    
    public JIFImprimirCE() {
        initComponents();
        
        Color c1=new Color(66,111,166);
        Color c2=new Color(102,174,118);
        JPColor miColor=new JPColor(c1,c2);
        miColor.setSize(this.getSize());
        p_encabezado.add(miColor);
        
        modelo=new DefaultTableModel();
        
        modelo.addColumn("ID");
        modelo.addColumn("Fecha");
        modelo.addColumn("Número de Cta.");
        modelo.addColumn("Estación de servicio");
        modelo.addColumn("Total Pesos");
        modelo.addColumn("Observaciones");
        
        setCellRender(tb_consulta);
        
     try {
         consultarTodos();
         
         
           ResultSet obj2=conexion.executeQuery("SELECT est_ser_desc FROM utilidades.estaciones_servicio ORDER BY est_ser_desc");
        
        while(obj2.next())
        {
            cb_eds.addItem(obj2.getObject("est_ser_desc"));

        }
         
     } catch (SQLException ex) {
         Logger.getLogger(JIFImprimirCE.class.getName()).log(Level.SEVERE, null, ex);
     }
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p_encabezado = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cb_eds = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_consulta = new javax.swing.JTable();
        btn_ver = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Impresión CE --UTDVVCC--");
        setPreferredSize(new java.awt.Dimension(800, 600));

        p_encabezado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("IMPRIMIR CONSUMO ESTACIÓN");

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/syscv/utd/recursos/medidor.png"))); // NOI18N

        javax.swing.GroupLayout p_encabezadoLayout = new javax.swing.GroupLayout(p_encabezado);
        p_encabezado.setLayout(p_encabezadoLayout);
        p_encabezadoLayout.setHorizontalGroup(
            p_encabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_encabezadoLayout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(250, Short.MAX_VALUE))
        );
        p_encabezadoLayout.setVerticalGroup(
            p_encabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_encabezadoLayout.createSequentialGroup()
                .addGroup(p_encabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(p_encabezadoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLabel2.setText("CE Consecutivo:");

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/syscv/utd/recursos/buscar.png"))); // NOI18N
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        jLabel3.setText("EDS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(cb_eds, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_buscar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cb_eds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        tb_consulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tb_consulta);

        btn_ver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/syscv/utd/recursos/ver.png"))); // NOI18N
        btn_ver.setToolTipText("Visualizar");
        btn_ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ver))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_ver)
                        .addGap(0, 374, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p_encabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(p_encabezado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verActionPerformed
        
        
     
        boolean estado=true;
        int id;
        if(tb_consulta.isRowSelected(tb_consulta.getSelectedRow()))
        {
        
            
            try { 
                id = (Integer) tb_consulta.getValueAt(tb_consulta.getSelectedRow(), 0);
                
                
                conexion=new ConexionBD();
                
                ResultSet obj=conexion.executeQuery("SELECT aprobado FROM consumo_combustible.consumo_estacion WHERE id_ce="+id+"");
                
                while (obj.next())
                {
                    estado=obj.getBoolean("aprobado");
                }
                
                
                if(estado==true)
                {
                    reporte=new ReporteConEstacion();
                    id=(Integer) tb_consulta.getValueAt(tb_consulta.getSelectedRow(), 0);
                
                     reporte.ejecutarReporte(id); 
                }
                else
                {
                     reporte=new ReporteConEstacion();
                    id=(Integer) tb_consulta.getValueAt(tb_consulta.getSelectedRow(), 0);
                
                     reporte.ejecutarReporte2(id); 
                }
               
            } catch (SQLException ex) {
                Logger.getLogger(JIFAprobacionCEDS.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla!", "Alerta!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_verActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
     try {
        // int id=Integer.parseInt(txt_id.getText());
        // System.out.println(id);
         LimpiarTabla();
         
         
         consultar();
     } catch (SQLException ex) {
         Logger.getLogger(JIFImprimirCE.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_btn_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_ver;
    private javax.swing.JComboBox cb_eds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel p_encabezado;
    private javax.swing.JTable tb_consulta;
    private javax.swing.JTextField txt_id;
    // End of variables declaration//GEN-END:variables

public void consultarTodos() throws SQLException
{
    ConexionBD conexion=new ConexionBD();
    
    ResultSet obj=conexion.executeQuery("SELECT ce.id_ce, ce.fecha_tran, ce.num_cta,eds.est_ser_desc,ce.total_pesos,ce.observaciones FROM consumo_combustible.consumo_estacion ce JOIN utilidades.estaciones_servicio eds ON eds.est_ser_id=ce.id_estacion ORDER BY ce.id_ce DESC");
    
    
        while (obj.next()) 
          {
          
          Object [] datos = new Object[6];
       
          for (int i=0;i<6;i++)
          {
              datos[i] =obj.getObject(i+1);
          }

           modelo.addRow(datos);
         
          }
        tb_consulta.setModel(modelo);
        setCellRender(tb_consulta);
        conexion.desconectar();
    
}

public void consultar() throws SQLException
{
    int ideds=0, consecutivo=0;
    
       if(cb_eds.getSelectedItem()!= null)
        {
            String eds=cb_eds.getSelectedItem().toString();
            
            ResultSet obj2=conexion.executeQuery("SELECT est_ser_id FROM utilidades.estaciones_servicio WHERE est_ser_desc='"+eds+"'");
            
            while (obj2.next())
            {
                ideds=obj2.getInt("est_ser_id");
                
            }
        }
    
       if(txt_id.getText().equals(""))
           
       {
           consecutivo=0;
       }
       else
       {
           consecutivo=Integer.parseInt(txt_id.getText());
       }
       
    
    ResultSet obj=conexion.executeQuery("SELECT ce.id_ce, ce.fecha_tran, ce.num_cta,eds.est_ser_desc,ce.total_pesos,ce.observaciones FROM consumo_combustible.consumo_estacion ce JOIN utilidades.estaciones_servicio eds ON eds.est_ser_id=ce.id_estacion WHERE ce.id_ce="+consecutivo+" OR ce.id_estacion="+ideds+"");
    
    
    if(obj.next()==true)
    {
    
        obj.beforeFirst();
        
        while(obj.next())
        {
          
          Object [] datos = new Object[6];
       
          for (int i=0;i<6;i++)
          {
              datos[i] =obj.getObject(i+1);
          }

           modelo.addRow(datos);
         
        } 
        tb_consulta.setModel(modelo);
        setCellRender(tb_consulta);
        conexion.desconectar();
        txt_id.setText("");
    }else
    {
        JOptionPane.showMessageDialog(null, "No hay registros con los parametros ingresados");
        consultarTodos();
    }
}

   public void LimpiarTabla()
    {
  
        for(int i=modelo.getRowCount()-1;i>=0;i--)
        {
            modelo.removeRow(i);
            
        }
    }
   // color a la tabla
   public void setCellRender(JTable table) {
        Enumeration<TableColumn> en = table.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new CellRenderer());
        }
    }


}


