/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.syscv.utd.presentacion;

import com.syscv.utd.conexionBD.ConexionBD;
import com.syscv.utd.dao.ctrlcom.documentos.ManejoImagen;
import com.syscv.utd.dao.ctrlcom.documentos.imagen;
import com.syscv.utd.entidades.ControllerItemList;
import com.syscv.utd.entidades.CtrlVehiculoCombo;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jonathan
 */
public class JIFInsertarDocCtrlCom extends javax.swing.JInternalFrame {

    private ManejoImagen mi=new ManejoImagen();
    private DefaultListModel modListaImagen = new DefaultListModel();
    private ConexionBD conexion=new ConexionBD();
    
    private int idctrl=0;

    public JIFInsertarDocCtrlCom() {
        initComponents();
        
        cargarItemVehiculo();
//        Actualizar_lista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista_Imagenes = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        FOTO = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cb_registros = new javax.swing.JComboBox();
        btnadjuntar = new javax.swing.JButton();
        chb_ad = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btn_cerrar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Insertar Documentos Control de Combustible --UTDVVCC--");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 300));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        Lista_Imagenes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Lista_Imagenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lista_ImagenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Lista_Imagenes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(320, 300));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        FOTO.setText("Pag. Doc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(FOTO, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Adjuntar archivos"));

        jLabel1.setText("Registros de Control Combustible");

        cb_registros.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        cb_registros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_registrosActionPerformed(evt);
            }
        });

        btnadjuntar.setText("Adjuntar");
        btnadjuntar.setToolTipText("Nota: Solo se admiten archivos JPG de peso maximo 1 Mb. Se recomiendan archivos de resolución 800 x 600 pixeles");
        btnadjuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadjuntarActionPerformed(evt);
            }
        });

        chb_ad.setSelected(true);
        chb_ad.setText("Adjuntar más archivos");
        chb_ad.setToolTipText("Activo: Permite adjuntar mas archivos para un registro. Desactivado: No se permite adjuntar mas archivos a un mismo control de combustible");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Nota: Solo se permiten archivos formato imagen (JPG). Y Tamaño max a (1 Mb)");

        btn_cerrar.setText("Cerrar Adjuntos");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_registros, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnadjuntar))
                    .addComponent(chb_ad)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cerrar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_registros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnadjuntar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chb_ad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btn_cerrar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Lista_ImagenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lista_ImagenesMouseClicked
        int index = this.Lista_Imagenes.getSelectedIndex();//obtiene index seleccionado
        if( index != -1)
        {
            //Extrae la clase imagen que corresponde a la posición donde se hizo un clic
            imagen img = (imagen)this.modListaImagen.getElementAt(index);
            //redimensiona imagen
      
            double alto = img.getArchivo().getHeight(null) / Math.ceil(img.getArchivo().getHeight(null)/367f) ;
            double ancho =img.getArchivo().getWidth(null) / Math.ceil(img.getArchivo().getWidth(null)/420f) ;
            Icon icon = new ImageIcon( img.getArchivo().getScaledInstance((int)ancho,(int)alto, Image.SCALE_AREA_AVERAGING) );            
            this.FOTO.setText("");
            this.FOTO.setIcon( icon  );//coloca imagen en el JLabel
        }
        
    }//GEN-LAST:event_Lista_ImagenesMouseClicked

    private void btnadjuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadjuntarActionPerformed
       JFileChooser fileChooser = new JFileChooser();
       fileChooser.setFileFilter( new FileNameExtensionFilter("Archivo de Imagen","jpg") );
       fileChooser.setCurrentDirectory(new java.io.File("e:/imagenes_tmp/"));
       int result = fileChooser.showOpenDialog(null);
        if ( result == JFileChooser.APPROVE_OPTION ){
            //obtiene ruta y nombre del archivo
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            String name = fileChooser.getSelectedFile().getName();
            CtrlVehiculoCombo ctrlcombo=(CtrlVehiculoCombo) cb_registros.getSelectedItem();
            idctrl=ctrlcombo.getIdctrl();
           try {
               if( mi.guardarfoto( GenerarCodigo() , name, ruta, idctrl) )
               {
                   JOptionPane.showMessageDialog(this,"Documento ["+name+"] almacenado");
                   Actualizar_lista();
                   
                   if(chb_ad.isSelected()==false)
                   {
                       int opc=JOptionPane.showConfirmDialog(null,"Desea registrar mas documentos al registro seleccionado?", "Aviso!", JOptionPane.YES_NO_OPTION);
                       
                       if(opc==JOptionPane.NO_OPTION)
                       {
                           conexion.executeUpdateQuery("UPDATE consumo_combustible.control_combustible SET docadjuntada=true WHERE ctrl_com_id="+idctrl+"");
                           conexion.desconectar();
                           
                           cb_registros.removeAllItems();
                           cargarItemVehiculo();
                           
                       }
                   }
               }
           } catch (Exception ex) {
               JOptionPane.showMessageDialog(this, ex, "Error",JOptionPane.ERROR_MESSAGE);
           }
        }
    }//GEN-LAST:event_btnadjuntarActionPerformed

    private void cb_registrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_registrosActionPerformed
        Actualizar_lista();
    }//GEN-LAST:event_cb_registrosActionPerformed

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        if(cb_registros.getSelectedItem()!= null) 
        {
        
        CtrlVehiculoCombo ctrlcombo=(CtrlVehiculoCombo) cb_registros.getSelectedItem();
         idctrl=ctrlcombo.getIdctrl();
         
         conexion=new ConexionBD();
         
         conexion.executeUpdateQuery("UPDATE consumo_combustible.control_combustible SET docadjuntada=true WHERE ctrl_com_id="+idctrl+"");
         conexion.desconectar();
         
         JOptionPane.showMessageDialog(null, "Se cerro el ingreso de Documentación adjunta para el ID " +idctrl+" \nde relación de combustible");

         cb_registros.removeAllItems();
         cargarItemVehiculo();
         //Actualizar_lista();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No hay registros para adjuntar documentación.");
        }
           
    }//GEN-LAST:event_btn_cerrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FOTO;
    private javax.swing.JList Lista_Imagenes;
    private javax.swing.JButton btn_cerrar;
    private javax.swing.JButton btnadjuntar;
    private javax.swing.JComboBox cb_registros;
    private javax.swing.JCheckBox chb_ad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
   public void cargarItemVehiculo()
    {
        ControllerItemList control=new ControllerItemList();
        
        ArrayList lista=control.listarItemIDVehi();
        
        if (lista!=null)
        {
            int size=lista.size();
            
            for(int i=0; i<size; i++)
            {
                cb_registros.addItem(lista.get(i));
            }
        }
    }
   
   private void Actualizar_lista()
    {
        
        CtrlVehiculoCombo ctrlcombo=(CtrlVehiculoCombo) cb_registros.getSelectedItem();
        idctrl=ctrlcombo.getIdctrl();
        this.modListaImagen.clear();
        this.modListaImagen = mi.Lista_Imagenes(idctrl);
        this.Lista_Imagenes.setModel(modListaImagen);
    }

    //Genera un código unico para la imagen
    private String GenerarCodigo()
    {
        SimpleDateFormat sdf= new SimpleDateFormat("hhmmss");
        return sdf.format(new Date());
    }









}
